
*** Assignment 2 Neighbours Simulation ***

We are going to implement a graphical simulation of segregation.
See : http://nifty.stanford.edu/2014/mccown-schelling-model-segregation/

This is s graphical program using JavaFX. All graphics is implemented you don't need
to code any graphics (you may extend, make fancier, if you like)

1.  Implement the method init(). This method is automatically called by JavaFX at program startup
    (before any graphics is visible on screen).
    The method should initialize the Actor[][] world-variable with some distribution of actors to
    be used in the simulation. Use the values for the dist and nLocations variables.

    NOTE: The world variable is the only variable allowed to be declared outside any method
    (besides JavaFX stuff). It's only allowed to access it in methods init() and updateWorld().
    If needed elsewhere, send as parameter.

    - If new to programming you should make a plan first.
    - Use functional decomposition to break down the initialization into manageable step.
    - Discuss with assistant before start implementing!!!
    - Implement methods bottom up, one at the time and test.

    When finished is should be possible to see the dots on the screen when running
    (they will not move).

    HINT: Remember the exercises!

2.  Now your task is to implement the method updateWorld() which will find all
    dissatisfied actors (RED or BLUE) and move them to new (random, previously not occupied) positions,
    until all are satisfied. All unsatisfied are moved at the same time, else a move may affect state
    of other Actor.

    The updateWorld() method is automatically called by a timer (you don't need to call it).
    The updateWorld() method is *HUGE* if written as one single method!

    If new to programming apply strategy as in 1. Make plan etc.....

    NOTE: Not guaranteed to get all satisfied if selecting other values for dist and
    threshold variables (see code).

3.  Change nLocations to 90 000. Program should run as smooth as before! If not restructure
    (too many nested loops)

4. (Optional) Add a real GUI to make it possible for users to select parameters like threshold.
    Use JavaFx. See http://docs.oracle.com/javafx/2/get_started/jfxpub-get_started.htm
    Make a copy of the working program and try to add the GUI.
